(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "ground/lib/star.ma".
include "static_2/notation/relations/suptermplus_6.ma".
include "static_2/notation/relations/suptermplus_7.ma".
include "static_2/s_transition/fqu.ma".

(* PLUS-ITERATED SUPCLOSURE *************************************************)

definition fqup: bool ‚Üí tri_relation genv lenv term ‚âù
                 Œªb. tri_TC ‚Ä¶ (fqu b).

interpretation "extended plus-iterated structural successor (closure)"
   'SupTermPlus b G1 L1 T1 G2 L2 T2 = (fqup b G1 L1 T1 G2 L2 T2).

interpretation "plus-iterated structural successor (closure)"
   'SupTermPlus G1 L1 T1 G2 L2 T2 = (fqup true G1 L1 T1 G2 L2 T2).

(* Basic properties *********************************************************)

lemma fqu_fqup: ‚àÄb,G1,G2,L1,L2,T1,T2. ‚ù®G1,L1,T1‚ù© ‚¨Ç[b] ‚ù®G2,L2,T2‚ù© ‚Üí
                ‚ù®G1,L1,T1‚ù© ‚¨Ç+[b] ‚ù®G2,L2,T2‚ù©.
/2 width=1 by tri_inj/ qed.

lemma fqup_strap1: ‚àÄb,G1,G,G2,L1,L,L2,T1,T,T2.
                   ‚ù®G1,L1,T1‚ù© ‚¨Ç+[b] ‚ù®G,L,T‚ù© ‚Üí ‚ù®G,L,T‚ù© ‚¨Ç[b] ‚ù®G2,L2,T2‚ù© ‚Üí
                   ‚ù®G1,L1,T1‚ù© ‚¨Ç+[b] ‚ù®G2,L2,T2‚ù©.
/2 width=5 by tri_step/ qed.

lemma fqup_strap2: ‚àÄb,G1,G,G2,L1,L,L2,T1,T,T2.
                   ‚ù®G1,L1,T1‚ù© ‚¨Ç[b] ‚ù®G,L,T‚ù© ‚Üí ‚ù®G,L,T‚ù© ‚¨Ç+[b] ‚ù®G2,L2,T2‚ù© ‚Üí
                   ‚ù®G1,L1,T1‚ù© ‚¨Ç+[b] ‚ù®G2,L2,T2‚ù©.
/2 width=5 by tri_TC_strap/ qed.

lemma fqup_pair_sn: ‚àÄb,I,G,L,V,T. ‚ù®G,L,‚ë°[I]V.T‚ù© ‚¨Ç+[b] ‚ù®G,L,V‚ù©.
/2 width=1 by fqu_pair_sn, fqu_fqup/ qed.

lemma fqup_bind_dx: ‚àÄp,I,G,L,V,T. ‚ù®G,L,‚ìë[p,I]V.T‚ù© ‚¨Ç+[‚ì£] ‚ù®G,L.‚ìë[I]V,T‚ù©.
/3 width=1 by fqu_bind_dx, fqu_fqup/ qed.

lemma fqup_clear: ‚àÄp,I,G,L,V,T. ‚ù®G,L,‚ìë[p,I]V.T‚ù© ‚¨Ç+[‚ìï] ‚ù®G,L.‚ìß,T‚ù©.
/3 width=1 by fqu_clear, fqu_fqup/ qed.

lemma fqup_flat_dx: ‚àÄb,I,G,L,V,T. ‚ù®G,L,‚ìï[I]V.T‚ù© ‚¨Ç+[b] ‚ù®G,L,T‚ù©.
/2 width=1 by fqu_flat_dx, fqu_fqup/ qed.

lemma fqup_flat_dx_pair_sn: ‚àÄb,I1,I2,G,L,V1,V2,T. ‚ù®G,L,‚ìï[I1]V1.‚ë°[I2]V2.T‚ù© ‚¨Ç+[b] ‚ù®G,L,V2‚ù©.
/2 width=5 by fqu_pair_sn, fqup_strap1/ qed.

lemma fqup_bind_dx_flat_dx: ‚àÄp,G,I1,I2,L,V1,V2,T. ‚ù®G,L,‚ìë[p,I1]V1.‚ìï[I2]V2.T‚ù© ‚¨Ç+[‚ì£] ‚ù®G,L.‚ìë[I1]V1,T‚ù©.
/2 width=5 by fqu_flat_dx, fqup_strap1/ qed.

lemma fqup_flat_dx_bind_dx: ‚àÄp,I1,I2,G,L,V1,V2,T. ‚ù®G,L,‚ìï[I1]V1.‚ìë[p,I2]V2.T‚ù© ‚¨Ç+[‚ì£] ‚ù®G,L.‚ìë[I2]V2,T‚ù©.
/3 width=5 by fqu_bind_dx, fqup_strap1/ qed.

(* Basic eliminators ********************************************************)

lemma fqup_ind: ‚àÄb,G1,L1,T1. ‚àÄQ:relation3 ‚Ä¶.
                (‚àÄG2,L2,T2. ‚ù®G1,L1,T1‚ù© ‚¨Ç[b] ‚ù®G2,L2,T2‚ù© ‚Üí Q G2 L2 T2) ‚Üí
                (‚àÄG,G2,L,L2,T,T2. ‚ù®G1,L1,T1‚ù© ‚¨Ç+[b] ‚ù®G,L,T‚ù© ‚Üí ‚ù®G,L,T‚ù© ‚¨Ç[b] ‚ù®G2,L2,T2‚ù© ‚Üí Q G L T ‚Üí Q G2 L2 T2) ‚Üí
                ‚àÄG2,L2,T2. ‚ù®G1,L1,T1‚ù© ‚¨Ç+[b] ‚ù®G2,L2,T2‚ù© ‚Üí Q G2 L2 T2.
#b #G1 #L1 #T1 #Q #IH1 #IH2 #G2 #L2 #T2 #H
@(tri_TC_ind ‚Ä¶ IH1 IH2 G2 L2 T2 H)
qed-.

lemma fqup_ind_dx: ‚àÄb,G2,L2,T2. ‚àÄQ:relation3 ‚Ä¶.
                   (‚àÄG1,L1,T1. ‚ù®G1,L1,T1‚ù© ‚¨Ç[b] ‚ù®G2,L2,T2‚ù© ‚Üí Q G1 L1 T1) ‚Üí
                   (‚àÄG1,G,L1,L,T1,T. ‚ù®G1,L1,T1‚ù© ‚¨Ç[b] ‚ù®G,L,T‚ù© ‚Üí ‚ù®G,L,T‚ù© ‚¨Ç+[b] ‚ù®G2,L2,T2‚ù© ‚Üí Q G L T ‚Üí Q G1 L1 T1) ‚Üí
                   ‚àÄG1,L1,T1. ‚ù®G1,L1,T1‚ù© ‚¨Ç+[b] ‚ù®G2,L2,T2‚ù© ‚Üí Q G1 L1 T1.
#b #G2 #L2 #T2 #Q #IH1 #IH2 #G1 #L1 #T1 #H
@(tri_TC_ind_dx ‚Ä¶ IH1 IH2 G1 L1 T1 H)
qed-.

(* Advanced properties ******************************************************)

lemma fqup_zeta (b) (p) (I) (G) (K) (V):
                ‚àÄT1,T2. ‚áß[‚Å§ùüè]T2 ‚âò T1 ‚Üí ‚ù®G,K,‚ìë[p,I]V.T1‚ù© ‚¨Ç+[b] ‚ù®G,K,T2‚ù©.
* /4 width=5 by fqup_strap2, fqu_fqup, fqu_drop, fqu_clear, fqu_bind_dx/ qed.

(* Basic_2A1: removed theorems 1: fqup_drop *)
