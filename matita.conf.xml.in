<?xml version="1.0" encoding="utf-8"?>
<helm_registry>
  <section name="user">
    <!-- User home directory. Here a ".matita" directory will be created
    and used to store the part of the library developed by the user. -->
    <key name="home">$(HOME)</key>
    <!-- User name. It is used down in this configuration file.  If left
    unspecified, name of the user executing matita will be used (as per
    getent) -->
    <!-- <key name="name">foo</key> -->
  </section>
  <section name="matita">
    <!-- Debug only. Stay away. -->
    <!-- <key name="auto_disambiguation">true</key> -->
    <!-- Debug only. Stay away. -->
    <!-- <key name="environment_trust">true</key> -->
    <key name="basedir">$(user.home)/.matita</key>
    <!-- Metadata owner. It will be used to create user-specific tables
    in the SQL database. -->
    <key name="owner">$(user.name)</key>
    <!-- Initial GUI font size. -->
    <!-- <key name="font_size">10</key> -->
  </section>
  <section name="db">
    <!-- Access parameter to the (MySql) metadata database. They are not
    needed if Matita is always run with -nodb, but this is _not_
    recommended since a lot of features wont work.
    Hint. The simplest way to create a database is:
      0) # become an user with database administration privileges
      1) mysqladmin create matita
      2) echo "grant all privileges on matita.* to helm;" | mysql matita
      Note that this way the database will be open to anyone, apply
      stricter permissions if needed.
    -->
    <key name="host">@DBHOST@</key>
    <key name="user">helm</key>
    <key name="database">matita</key>
  </section>
  <section name="getter">
    <!-- Cache dir for CIC XML documents downloaded from the net.
    Beware that this dir may become really space-consuming. It wont be
    used if all prefexises below are local (i.e. "file:///" URI scheme).
    -->
    <key name="cache_dir">$(user.home)/.matita/getter/cache</key>
    <!-- "Prefixes", i.e.: mappings URI -> URL of the global library
    Each prefix mapps an URI of the cic:/ namespace to an URL where the
    documents can actually be accessed. URL can be in the "file://" or
    "http://" scheme. Only "file://" scheme can be used to store
    documents created by the user.
    Each prefix may be given a list of attributes. Currently supported
    attributes are:
    - "legacy" for parts of the library not generated by Matita (e.g.
      exported from Coq)
    - "ro" for parts of the library which are not writable by the user
      (e.g. the Matita standard library)
    "legacy" implies "ro"
    -->
    <key name="prefix">
      cic:/matita/
      file://@RT_BASE_DIR@/stantard-library/
      ro
    </key>
    <key name="prefix">
      cic:/matita/
      file://$(user.home)/.matita/xml/matita/
    </key>
    <key name="prefix">
      cic:/
      file://@RT_BASE_DIR@/legacy-library/coq/
      legacy
    </key>
  </section>
</helm_registry>
